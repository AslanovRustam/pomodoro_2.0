{"version":3,"file":"static/js/19.fad5b8cc.chunk.js","mappings":"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","sources":["webpack://pomodoro_2.0/./src/components/Task/task.module.css?4857","components/Task/Task.jsx","webpack://pomodoro_2.0/./src/components/TaskList/taskList.module.css?bf36","components/TaskList/TaskList.jsx","Pages/Tasks.jsx","webpack://pomodoro_2.0/./src/components/Container/container.module.css?0cd8","components/Container/Container.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"task_item__8-xog\",\"name\":\"task_name__eO2KU\",\"crosed\":\"task_crosed__IBxJC\",\"description\":\"task_description__xFm0l\",\"buttons\":\"task_buttons__5Uq57\",\"button\":\"task_button__JkHyq\",\"input\":\"task_input__RKaJh\",\"checked\":\"task_checked__6f+Tf\",\"container\":\"task_container__RAEPg\",\"navlink\":\"task_navlink__3opGo\"};","import { NavLink } from \"react-router-dom\";\r\nimport Button from \"../Button/Button\";\r\nimport s from \"./task.module.css\";\r\n\r\nexport default function Task({\r\n  item: { done, name, description, id },\r\n  onTaskDone,\r\n  onTaskDelete,\r\n  onTaskUpdate,\r\n}) {\r\n  const handleChange = () => {\r\n    onTaskDone(id, !done);\r\n  };\r\n  return (\r\n    <li className={s.item}>\r\n      <div className={s.textContainer}>\r\n        <p className={`${s.name} ${done && s.crosed}`}>{name}</p>\r\n        <p className={s.description}>{description}</p>\r\n      </div>\r\n      <div className={s.container}>\r\n        <NavLink to={`/tasks/${id}/${name}`} className={s.navlink}>\r\n          <Button text=\"go\" />\r\n        </NavLink>\r\n        <div className={s.buttons}>\r\n          <Button text=\"delete\" onClick={() => onTaskDelete(id)} width=\"5em\" />\r\n          <Button\r\n            text=\"edit\"\r\n            onClick={() => onTaskUpdate({ done, name, description, id })}\r\n            width=\"5em\"\r\n          />\r\n          <input\r\n            type=\"checkbox\"\r\n            className={`${s.input} ${done && s.checked}`}\r\n            checked={done}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"taskList_list__Yg1-t\"};","import Task from \"../Task/Task\";\r\nimport s from \"./taskList.module.css\";\r\nimport toast from \"react-hot-toast\";\r\nexport default function TaskList({\r\n  tasks,\r\n  setTaskArr,\r\n  setShowmodal,\r\n  setUpdatebleTask,\r\n}) {\r\n  const handleProgressTask = (taskId, newDone) => {\r\n    const updatedTasks = tasks.map((task) =>\r\n      task.id === taskId ? { ...task, done: newDone } : task\r\n    );\r\n    setTaskArr(updatedTasks);\r\n  };\r\n\r\n  const currentTaskToUpdate = (id) => {\r\n    return tasks.find((task) => task.id === id);\r\n  };\r\n\r\n  const handlDeleteTask = (id) => {\r\n    const updatedTasks = tasks.filter((task) => task.id !== id);\r\n    setTaskArr(updatedTasks);\r\n    toast.error(\r\n      `now your ${currentTaskToUpdate(id).name.toUpperCase()} is DELETED`\r\n    );\r\n  };\r\n  const handleUpdateTaask = (updatedTask) => {\r\n    setShowmodal(true);\r\n    setUpdatebleTask({\r\n      id: updatedTask.id,\r\n      done: updatedTask.done,\r\n      name: updatedTask.name,\r\n      description: updatedTask.description,\r\n    });\r\n    toast(\r\n      `now you editing ${currentTaskToUpdate(\r\n        updatedTask.id\r\n      ).name.toUpperCase()} task`,\r\n      {\r\n        style: {\r\n          borderRadius: \"0.2em\",\r\n          background: \"#f60\",\r\n          color: \"white\",\r\n        },\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <ul className={s.list}>\r\n      {tasks.map((item) => (\r\n        <Task\r\n          key={item.id}\r\n          item={item}\r\n          onTaskDone={handleProgressTask}\r\n          onTaskDelete={handlDeleteTask}\r\n          onTaskUpdate={handleUpdateTaask}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useData } from \"../helpers/DataContext\";\r\nimport Container from \"../components/Container/Container\";\r\nimport TaskList from \"../components/TaskList/TaskList\";\r\n\r\nexport default function Tasks() {\r\n  const { taskArr, setTaskArr, setUpdatebleTask, setShowmodal } = useData();\r\n\r\n  return (\r\n    <Container>\r\n      <TaskList\r\n        tasks={taskArr}\r\n        setTaskArr={setTaskArr}\r\n        setShowmodal={setShowmodal}\r\n        setUpdatebleTask={setUpdatebleTask}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_container__E3MIQ\",\"hide\":\"container_hide__rXkSF\"};","import { useData } from \"../../helpers/DataContext\";\r\nimport s from \"./container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  const { hideSidebar } = useData();\r\n  return (\r\n    <section className={`${s.container} ${hideSidebar && s.hide}`}>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n"],"names":["Task","_ref","_ref$item","item","done","name","description","id","onTaskDone","onTaskDelete","onTaskUpdate","_jsxs","className","s","children","textContainer","_jsx","concat","crosed","container","NavLink","to","navlink","Button","text","buttons","onClick","width","type","input","checked","onChange","TaskList","tasks","setTaskArr","setShowmodal","setUpdatebleTask","handleProgressTask","taskId","newDone","updatedTasks","map","task","_objectSpread","currentTaskToUpdate","find","handlDeleteTask","filter","toast","error","toUpperCase","handleUpdateTaask","updatedTask","style","borderRadius","background","color","list","Tasks","_useData","useData","taskArr","Container","hideSidebar","hide"],"sourceRoot":""}